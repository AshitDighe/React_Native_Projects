{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport data from \"../data\";\nimport { Transition, Transitioning } from 'react-native-reanimated';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar transition = _jsxs(Transition.Together, {\n  children: [_jsx(Transition.In, {\n    type: \"fade\",\n    durationMs: 200\n  }), _jsx(Transition.Change, {}), _jsx(Transition.Out, {\n    type: \"fade\",\n    durationMs: 200\n  })]\n});\n\nvar Info = function Info() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentIndex = _React$useState2[0],\n      setCurrentIndex = _React$useState2[1];\n\n  var ref = React.useRef();\n  return _jsxs(Transitioning.View, {\n    ref: ref,\n    transition: transition,\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      hidden: true\n    }), data.map(function (_ref, index) {\n      var bg = _ref.bg,\n          color = _ref.color,\n          category = _ref.category,\n          subCategories = _ref.subCategories;\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          ref.current.animateNextTransition();\n          setCurrentIndex(index === currentIndex ? null : index);\n        },\n        style: styles.cardContainer,\n        activeOpacity: 0.9,\n        children: _jsxs(View, {\n          style: [styles.card, {\n            backgroundColor: bg\n          }],\n          children: [_jsx(Text, {\n            style: [styles.heading, {\n              color: color\n            }],\n            children: category\n          }), index === currentIndex && _jsx(View, {\n            style: styles.subCategoriesList,\n            children: subCategories.map(function (subCategory) {\n              return _jsx(Text, {\n                style: [styles.body, {\n                  color: color\n                }],\n                children: subCategory\n              }, subCategory);\n            })\n          })]\n        })\n      }, category);\n    })]\n  });\n};\n\nexport default Info;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fffafa',\n    justifyContent: 'center'\n  },\n  cardContainer: {\n    flexGrow: 1,\n    marginBottom: 14,\n    marginTop: 14\n  },\n  card: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    fontSize: 14,\n    fontWeight: '600',\n    textTransform: 'uppercase'\n  },\n  body: {\n    width: 1000,\n    backgroundColor: '#fff',\n    fontSize: 12,\n    lineHeight: 20 * 1.5,\n    textAlign: 'center'\n  },\n  subCategoriesList: {\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["D:/workSpace/gitRepo/React_Native_Projects/src/Components/Info/index.tsx"],"names":["StatusBar","React","data","Transition","Transitioning","transition","Info","useState","currentIndex","setCurrentIndex","ref","useRef","styles","container","map","index","bg","color","category","subCategories","current","animateNextTransition","cardContainer","card","backgroundColor","heading","subCategoriesList","subCategory","body","StyleSheet","create","flex","justifyContent","flexGrow","marginBottom","marginTop","alignItems","fontSize","fontWeight","textTransform","width","lineHeight","textAlign"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport data from '../data';\r\nimport { Transition, Transitioning } from 'react-native-reanimated';\r\n\r\nconst transition = (\r\n  <Transition.Together>\r\n    <Transition.In type='fade' durationMs={200} />\r\n    <Transition.Change />\r\n    <Transition.Out type='fade' durationMs={200} />\r\n  </Transition.Together>\r\n);\r\n\r\nconst Info = () => {\r\n  const [currentIndex, setCurrentIndex] = React.useState(null);\r\n  const ref = React.useRef();\r\n\r\n  return (\r\n    <Transitioning.View\r\n    ref={ref}\r\n    transition={transition}\r\n    style={styles.container}\r\n  >\r\n    <StatusBar hidden />\r\n    {data.map(({ bg, color, category, subCategories }, index) => {\r\n      return (\r\n        <TouchableOpacity\r\n          key={category}\r\n          onPress={() => {\r\n            ref.current.animateNextTransition();\r\n            setCurrentIndex(index === currentIndex ? null : index);\r\n          }}\r\n          style={styles.cardContainer}\r\n          activeOpacity={0.9}\r\n        >\r\n          <View style={[styles.card, { backgroundColor: bg }]}>\r\n            <Text style={[styles.heading, { color }]}>{category}</Text>\r\n            {index === currentIndex && (\r\n              <View style={styles.subCategoriesList}>\r\n                {subCategories.map((subCategory) => (\r\n                  <Text key={subCategory} style={[styles.body, { color }]}>\r\n                    {subCategory}\r\n                  </Text>\r\n                ))}\r\n              </View>\r\n            )}\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    })}\r\n  </Transitioning.View>\r\n  )\r\n}\r\n\r\nexport default Info\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fffafa',\r\n    justifyContent: 'center',\r\n  },\r\n  cardContainer: {\r\n    flexGrow: 1,\r\n    marginBottom:14,\r\n    marginTop:14\r\n  },\r\n  card: {\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  heading: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    textTransform: 'uppercase',\r\n    // letterSpacing: -2,\r\n  },\r\n  body: {\r\n    width:1000,\r\n    backgroundColor:'#fff',\r\n    fontSize: 12,\r\n    lineHeight: 20 * 1.5,\r\n    textAlign: 'center',\r\n    \r\n  },\r\n  subCategoriesList: {\r\n    marginTop: 20,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}