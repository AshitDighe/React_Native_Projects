{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nimport { firebaseConfig } from \"./config\";\nfirebase.initializeApp(firebaseConfig);\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\nexport var GoogleProvider = new firebase.auth.GoogleAuthProvider();\nGoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(GoogleProvider);\n};\nexport var handleUserProfile = function handleUserProfile(userAuth) {\n  var uid,\n      userRef,\n      snapshot,\n      displayName,\n      email,\n      timestamp,\n      _len,\n      additionalData,\n      _key,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function handleUserProfile$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (userAuth) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          uid = userAuth.uid;\n          userRef = firestore.doc(\"users/\" + uid);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(userRef.get());\n\n        case 6:\n          snapshot = _context.sent;\n\n          if (snapshot.exists) {\n            _context.next = 18;\n            break;\n          }\n\n          displayName = userAuth.displayName, email = userAuth.email;\n          timestamp = new Date();\n          _context.prev = 10;\n\n          for (_len = _args.length, additionalData = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            additionalData[_key - 1] = _args[_key];\n          }\n\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(userRef.set(_objectSpread({\n            displayName: displayName,\n            email: email,\n            createdDate: timestamp\n          }, additionalData)));\n\n        case 14:\n          _context.next = 18;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](10);\n\n        case 18:\n          return _context.abrupt(\"return\", userRef);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[10, 16]], Promise);\n};","map":{"version":3,"sources":["D:/workSpace/gitRepo/React_Native_Projects/src/firebase/utils.tsx"],"names":["firebase","firebaseConfig","initializeApp","auth","firestore","GoogleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","handleUserProfile","userAuth","uid","userRef","doc","get","snapshot","exists","displayName","email","timestamp","Date","additionalData","set","createdDate"],"mappings":";;;;;;;AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP;AACA,SAASC,cAAT;AAEAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;AAEA,OAAO,IAAME,IAAI,GAAGH,QAAQ,CAACG,IAAT,EAAb;AACP,OAAO,IAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAAT,EAAlB;AAEP,OAAO,IAAMC,cAAc,GAAG,IAAIL,QAAQ,CAACG,IAAT,CAAcG,kBAAlB,EAAvB;AACPD,cAAc,CAACE,mBAAf,CAAmC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAnC;AACA,OAAO,IAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB;AAAA,SAAIN,IAAI,CAACO,eAAL,CAAqBL,cAArB,CAAJ;AAAA,CAAvB;AACP,OAAO,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,cAC1BA,QAD0B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEvBC,UAAAA,GAFuB,GAEfD,QAFe,CAEvBC,GAFuB;AAIzBC,UAAAA,OAJyB,GAIfV,SAAS,CAACW,GAAV,YAAuBF,GAAvB,CAJe;AAAA;AAAA,2CAKRC,OAAO,CAACE,GAAR,EALQ;;AAAA;AAKzBC,UAAAA,QALyB;;AAAA,cAO1BA,QAAQ,CAACC,MAPiB;AAAA;AAAA;AAAA;;AAQrBC,UAAAA,WARqB,GAQEP,QARF,CAQrBO,WARqB,EAQRC,KARQ,GAQER,QARF,CAQRQ,KARQ;AASvBC,UAAAA,SATuB,GASX,IAAIC,IAAJ,EATW;AAAA;;AAAA,oCAAwBC,cAAxB;AAAwBA,YAAAA,cAAxB;AAAA;;AAAA;AAAA,2CAYrBT,OAAO,CAACU,GAAR;AACJL,YAAAA,WAAW,EAAXA,WADI;AAEJC,YAAAA,KAAK,EAALA,KAFI;AAGJK,YAAAA,WAAW,EAAEJ;AAHT,aAIDE,cAJC,EAZqB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAsBxBT,OAtBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\nimport  {firebaseConfig}  from './config';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\nGoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle=()=>auth.signInWithPopup(GoogleProvider);\r\nexport const handleUserProfile = async (userAuth:any, ...additionalData:any) => {\r\n  if (!userAuth) return;\r\n  const { uid } = userAuth;\r\n\r\n  const userRef = firestore.doc(`users/${uid}`);\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const timestamp = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdDate: timestamp,\r\n        ...additionalData\r\n      });\r\n    } catch(err) {\r\n      // console.log(err);\r\n    }\r\n  }\r\n  return userRef;\r\n};"]},"metadata":{},"sourceType":"module"}