{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Input from \"../Form/FormInput\";\nimport Button from \"../Form/Button\";\nimport { auth, handleUserProfile } from \"./../../firebase/utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signup = function Signup(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var signup = function signup() {\n    var _await$auth$createUse, user;\n\n    return _regeneratorRuntime.async(function signup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name && email && password)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.createUserWithEmailAndPassword(email, password));\n\n          case 4:\n            _await$auth$createUse = _context.sent;\n            user = _await$auth$createUse.user;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(handleUserProfile(user, {\n              name: name\n            }));\n\n          case 8:\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 13:\n            _context.next = 16;\n            break;\n\n          case 15:\n            Alert.alert(\"Error\", \"Missing Fields\");\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 25,\n        marginVertical: 10,\n        paddingTop: 45\n      },\n      children: \"Sign Up Screen\"\n    }), _jsx(Input, {\n      placeholder: \"Name\",\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: signup\n    }), _jsxs(View, {\n      style: styles.loginText,\n      children: [_jsx(Text, {\n        style: {\n          marginHorizontal: 5\n        },\n        children: \"Already Have an Account?\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('signin');\n        },\n        style: {\n          marginHorizontal: 5\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'rgba(81,135,200,1)'\n          },\n          children: \"Login Here\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default Signup;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginText: {\n    flexDirection: 'row',\n    marginVertical: 20\n  }\n});","map":{"version":3,"sources":["D:/workSpace/gitRepo/React_Native_Projects/src/Components/Signup/index.tsx"],"names":["React","useState","Input","Button","auth","handleUserProfile","Signup","props","name","setName","email","setEmail","password","setPassword","signup","createUserWithEmailAndPassword","user","console","log","Alert","alert","styles","container","fontSize","marginVertical","paddingTop","text","loginText","marginHorizontal","navigation","navigate","color","StyleSheet","create","flex","justifyContent","alignItems","flexDirection"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\r\nimport { View, Text, StyleSheet, Alert, TouchableOpacity } from 'react-native';\r\nimport Input from '../Form/FormInput';\r\nimport Button from '../Form/Button';\r\nimport firebase from 'firebase/compat/app'\r\nimport { auth, handleUserProfile, GoogleProvider } from './../../firebase/utils';\r\nconst Signup  = (props:any) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const signup =async() => {\r\n        if(name && email && password){\r\n            try{\r\n                const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n             await handleUserProfile(user,{name});\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n                \r\n            }\r\n\r\n        } else {\r\n            Alert.alert(`Error`, `Missing Fields`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={{fontSize: 25, marginVertical: 10,paddingTop:45}}>Sign Up Screen</Text>\r\n            <Input placeholder=\"Name\" onChangeText={(text) => setName(text)} />\r\n            <Input placeholder=\"Email\" onChangeText={(text) => setEmail(text)} />\r\n            <Input placeholder=\"Password\" secureTextEntry onChangeText={(text) => setPassword(text)} />\r\n            <Button title=\"Sign Up\" onPress={signup} />\r\n            <View style={styles.loginText}>\r\n                <Text style={{marginHorizontal: 5}}>Already Have an Account?</Text>\r\n                <TouchableOpacity onPress={() => props.navigation.navigate('signin')} style={{marginHorizontal: 5}}>\r\n                    <Text style={{color: 'rgba(81,135,200,1)'}}>Login Here</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    loginText: {\r\n        flexDirection: 'row',\r\n        marginVertical: 20\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}