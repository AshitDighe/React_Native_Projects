{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"../Form/Button\";\nimport Input from \"../Form/FormInput\";\nimport { useNavigationContainerRef } from '@react-navigation/native';\nimport firebase from 'firebase/compat/app';\nimport { useDispatch } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignIn = function SignIn(props) {\n  var navigationRef = useNavigationContainerRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var login = function login() {\n    var _await$firebase$auth$, user;\n\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(email && password)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 3:\n            _await$firebase$auth$ = _context.sent;\n            user = _await$firebase$auth$.user;\n            _context.next = 8;\n            break;\n\n          case 7:\n            Alert.alert(\"Missing Fields\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 25,\n        marginVertical: 10\n      },\n      children: \"Login Screen\"\n    }), _jsx(Input, {\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      title: \"Sign In\",\n      onPress: login\n    }), _jsxs(View, {\n      style: styles.loginText,\n      children: [_jsx(Text, {\n        style: {\n          marginHorizontal: 5\n        },\n        children: \"Don't Have an Account?\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('signup');\n        },\n        style: {\n          marginHorizontal: 5\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'rgba(81,135,200,1)'\n          },\n          children: \"Sign Up Here\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default SignIn;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginText: {\n    flexDirection: 'row',\n    marginVertical: 20\n  }\n});","map":{"version":3,"sources":["D:/workSpace/gitRepo/React_Native_Projects/src/Components/SignIn/index.tsx"],"names":["React","useState","Button","Input","useNavigationContainerRef","firebase","useDispatch","SignIn","props","navigationRef","email","setEmail","password","setPassword","dispatch","login","auth","signInWithEmailAndPassword","user","Alert","alert","styles","container","fontSize","marginVertical","text","loginText","marginHorizontal","navigation","navigate","color","StyleSheet","create","flex","justifyContent","alignItems","flexDirection"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,SAA8BC,yBAA9B,QAA+D,0BAA/D;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAe;AAC1B,MAAMC,aAAa,GAACL,yBAAyB,EAA7C;;AACA,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,MAAMS,KAAK,GAAE,SAAPA,KAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACNL,KAAK,IAAIE,QADH;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAEgBP,QAAQ,CAACW,IAAT,GAAgBC,0BAAhB,CAA2CP,KAA3C,EAAkDE,QAAlD,CAFhB;;AAAA;AAAA;AAEEM,YAAAA,IAFF,yBAEEA,IAFF;AAAA;AAAA;;AAAA;AAILC,YAAAA,KAAK,CAACC,KAAN;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAQF,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACK,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE,EAAX;AAAeC,QAAAA,cAAc,EAAE;AAA/B,OAAb;AAAA;AAAA,MADL,EAEA,KAAC,KAAD;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,eAAUd,QAAQ,CAACc,IAAD,CAAlB;AAAA;AAAzC,MAFA,EAGA,KAAC,KAAD;AAAO,MAAA,WAAW,EAAC,UAAnB;AAA8B,MAAA,eAAe,MAA7C;AAA8C,MAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,eAAUZ,WAAW,CAACY,IAAD,CAArB;AAAA;AAA5D,MAHA,EAIA,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAEV;AAAjC,MAJA,EAKA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEM,MAAM,CAACK,SAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,gBAAgB,EAAE;AAAnB,SAAb;AAAA;AAAA,QADJ,EAEK,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMnB,KAAK,CAACoB,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B,CAAN;AAAA,SAA3B;AAAsE,QAAA,KAAK,EAAE;AAACF,UAAAA,gBAAgB,EAAE;AAAnB,SAA7E;AAAA,kBACA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAE;AAAR,WAAb;AAAA;AAAA;AADA,QAFL;AAAA,MALA;AAAA,IADF;AAgBD,CA7BD;;AA+BA,eAAevB,MAAf;AAEA,IAAMc,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADkB;AAM7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,aAAa,EAAE,KADR;AAEPZ,IAAAA,cAAc,EAAE;AAFT;AANkB,CAAlB,CAAf","sourcesContent":["import React, { FC, useState } from 'react'\r\nimport { View, Text, StyleSheet, Alert, TouchableOpacity, } from 'react-native';\r\nimport Button from '../Form/Button';\r\nimport Input from '../Form/FormInput';\r\nimport { NavigationContainer, useNavigationContainerRef } from '@react-navigation/native';\r\nimport Signup from '../Signup';\r\nimport firebase from 'firebase/compat/app'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SignIn = (props:any) => {\r\n    const navigationRef=useNavigationContainerRef();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const login =async () => {\r\n        if(email && password){\r\n            const {user} = await firebase.auth().signInWithEmailAndPassword(email, password);\r\n        } else {    \r\n            Alert.alert(`Missing Fields`)\r\n        }\r\n    }\r\n    \r\n  return (\r\n    <View style={styles.container}>\r\n         <Text style={{fontSize: 25, marginVertical: 10}}>Login Screen</Text>\r\n    <Input placeholder=\"Email\" onChangeText={(text) => setEmail(text)} />\r\n    <Input placeholder=\"Password\" secureTextEntry onChangeText={(text) => setPassword(text)} />\r\n    <Button title=\"Sign In\" onPress={login}/>\r\n    <View style={styles.loginText}>\r\n        <Text style={{marginHorizontal: 5}}>Don't Have an Account?</Text>\r\n         <TouchableOpacity onPress={() => props.navigation.navigate('signup')} style={{marginHorizontal: 5}}>\r\n         <Text style={{color: 'rgba(81,135,200,1)'}} >Sign Up Here</Text>\r\n        </TouchableOpacity>\r\n     </View>\r\n    </View>\r\n\r\n   \r\n  )\r\n}\r\n\r\nexport default SignIn\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    loginText: {\r\n        flexDirection: 'row',\r\n        marginVertical: 20,\r\n\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}