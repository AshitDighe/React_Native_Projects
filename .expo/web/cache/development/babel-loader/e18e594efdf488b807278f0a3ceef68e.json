{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect, Provider } from 'react-redux';\nimport { auth, handleUserProfile } from \"./src/firebase/utils\";\nimport MainNav from \"./src/navigation/mainNav\";\nimport store from \"./src/Redux/createStore\";\nimport { setCurrentUser as _setCurrentUser } from \"./src/Redux/user/userAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar App = function App(props) {\n  var Tab = createBottomTabNavigator();\n  var setCurrentUser = props.setCurrentUser,\n      currentUser = props.currentUser;\n  useEffect(function () {\n    var authListener = auth.onAuthStateChanged(function _callee(userAuth) {\n      var userRef;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!userAuth) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(handleUserProfile(userAuth));\n\n            case 3:\n              userRef = _context.sent;\n              userRef == null ? void 0 : userRef.onSnapshot(function (snapshot) {\n                setCurrentUser({\n                  currentUser: _objectSpread({\n                    id: snapshot.id\n                  }, snapshot.data())\n                });\n              });\n\n            case 5:\n              setCurrentUser(userAuth);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n    return function () {\n      authListener();\n    };\n  }, []);\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(NavigationContainer, {\n        children: _jsx(MainNav, {})\n      })\n    })\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(user) {\n  return {\n    currentUser: user.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setCurrentUser: function setCurrentUser(user) {\n      return dispatch(_setCurrentUser(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/workSpace/gitRepo/React_Native_Projects/App.tsx"],"names":["createBottomTabNavigator","NavigationContainer","createNativeStackNavigator","useEffect","connect","Provider","auth","handleUserProfile","MainNav","store","setCurrentUser","Stack","App","props","Tab","currentUser","authListener","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","styles","container","mapStateToProps","user","mapDispatchToProps","dispatch","StyleSheet","create","flex","backgroundColor","justifyContent"],"mappings":";;;;;;;AAAA,SAASA,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAGA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AAKA,SAASC,IAAT,EAAeC,iBAAf;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,SAASC,cAAc,IAAdA,eAAT;;AAEA,IAAMC,KAAK,GAAGT,0BAA0B,EAAxC;;AAEC,IAAMU,GAAG,GAAC,SAAJA,GAAI,CAACC,KAAD,EAAc;AACtB,MAAMC,GAAG,GAAGd,wBAAwB,EAApC;AAEA,MAAQU,cAAR,GAAwCG,KAAxC,CAAQH,cAAR;AAAA,MAAwBK,WAAxB,GAAwCF,KAAxC,CAAwBE,WAAxB;AAEAZ,EAAAA,SAAS,CAAC,YAAI;AACd,QAAMa,YAAY,GAAGV,IAAI,CAACW,kBAAL,CAAwB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACtCA,QADsC;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEjBX,iBAAiB,CAACW,QAAD,CAFA;;AAAA;AAEjCC,cAAAA,OAFiC;AAGvCA,cAAAA,OAAO,QAAP,YAAAA,OAAO,CAAEC,UAAT,CAAoB,UAAAC,QAAQ,EAAE;AAC3BX,gBAAAA,cAAc,CAAC;AACdK,kBAAAA,WAAW;AACTO,oBAAAA,EAAE,EAACD,QAAQ,CAACC;AADH,qBAEND,QAAQ,CAACE,IAAT,EAFM;AADG,iBAAD,CAAd;AAMF,eAPD;;AAHuC;AAYzCb,cAAAA,cAAc,CAACQ,QAAD,CAAd;;AAZyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAArB;AAcE,WAAO,YAAM;AACXF,MAAAA,YAAY;AACb,KAFD;AAGD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBD,SACE,KAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAA,cACH,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEe,MAAM,CAACC,SAApB;AAAA,gBACE,KAAC,mBAAD;AAAA,kBAKG,KAAC,OAAD;AALH;AADF;AADG,IADF;AAcD,CAvCA;;AAwCD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAAA,SAAe;AACrCZ,IAAAA,WAAW,EAAEY,IAAI,CAACZ;AADmB,GAAf;AAAA,CAAxB;;AAIA,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAmB;AAC5CnB,IAAAA,cAAc,EAAE,wBAACiB,IAAD;AAAA,aAAeE,QAAQ,CAACnB,eAAc,CAACiB,IAAD,CAAf,CAAvB;AAAA;AAD4B,GAAnB;AAAA,CAA3B;;AAIA,eAAgBvB,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAhB;AAEA,IAAMY,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC9BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAITC,IAAAA,cAAc,EAAE;AAJP;AADmB,CAAlB,CAAf","sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { connect, Provider } from 'react-redux';\r\nimport BottomTab from './src/Components/BottomTab';\r\nimport Home from './src/Components/Home';\r\nimport SignIn from './src/Components/SignIn';\r\nimport Signup from './src/Components/Signup';\r\nimport { auth, handleUserProfile } from './src/firebase/utils';\r\nimport MainNav from './src/navigation/mainNav';\r\nimport store from './src/Redux/createStore';\r\nimport { setCurrentUser } from './src/Redux/user/userAction';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n const App=(props:any)=> {\r\n   const Tab = createBottomTabNavigator();\r\n\r\n   const { setCurrentUser, currentUser } = props;\r\n\r\n   useEffect(()=>{\r\n   const authListener=  auth.onAuthStateChanged(async userAuth=>{\r\n       if(userAuth){\r\n         const userRef = await handleUserProfile(userAuth);\r\n         userRef?.onSnapshot(snapshot=>{\r\n            setCurrentUser({\r\n             currentUser:{\r\n               id:snapshot.id,\r\n               ...snapshot.data()\r\n             }\r\n           })\r\n         })\r\n       }\r\n       setCurrentUser(userAuth)\r\n     })\r\n     return () => {\r\n       authListener();\r\n     };\r\n   }, []);\r\n \r\n  return (\r\n    <Provider store={store}>\r\n <View style={styles.container}>\r\n   <NavigationContainer>\r\n     {/* <Stack.Navigator >\r\n        <Stack.Screen name=\"signin\" component={SignIn} />\r\n        <Stack.Screen name=\"signup\" component={Signup} />\r\n      </Stack.Navigator> */}\r\n      <MainNav/>\r\n    </NavigationContainer>\r\n</View>\r\n     </Provider>\r\n\r\n  );\r\n}\r\nconst mapStateToProps = (user:any) => ({\r\n  currentUser: user.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch:any) => ({\r\n  setCurrentUser: (user: any) => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n     backgroundColor: '#fff',\r\n     // alignItems: 'center',\r\n     justifyContent: 'center',\r\n   },\r\n });\r\n \r\n"]},"metadata":{},"sourceType":"module"}